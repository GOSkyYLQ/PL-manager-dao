<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="LightningProtection.mapper.ContractMapper">
    <resultMap id="ContractInfoMap" type="LightningProtection.pojo.ta_contract" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="contract_name" property="contract_name" jdbcType="VARCHAR" />
        <result column="sign_date" property="sign_date" jdbcType="VARCHAR" />
        <result column="contract_amount" property="contract_amount" jdbcType="BIGINT" />
        <result column="received_amount" property="received_amount" jdbcType="BIGINT" />
        <result column="receivable_amount" property="receivable_amount" jdbcType="BIGINT" />
        <result column="payment_method" property="payment_method" jdbcType="VARCHAR" />
        <result column="invoice_provide" property="invoice_provide" jdbcType="VARCHAR" />
        <!--<result column="create_time" property="create_time" jdbcType="TIMESTAMP" />-->
    </resultMap>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
    id, contract_name, sign_date, contract_amount, received_amount, receivable_amount, payment_method, invoice_provide
    </sql>
    <select id="selectByExample" resultMap="ContractInfoMap" parameterType="LightningProtection.pojo.ta_contractExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from ta_contract
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="LightningProtection.pojo.ta_contractExample">
        delete from ta_contract
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from ta_contract
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insertSelective" parameterType="LightningProtection.pojo.ta_contract">
        insert into ta_contract
        <trim prefix="(" suffix= ")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="contract_name != null">
               contract_name,
            </if>
            <if test="sign_date != null">
                sign_date,
            </if>
            <if test="contract_amount != null">
                contract_amount,
            </if>
            <if test="received_amount != null">
                received_amount,
            </if>
            <if test="receivable_amount != null">
                receivable_amount,
            </if>
            <if test="payment_method != null">
                payment_method,
            </if>
            <if test="invoice_provide != null">
                invoice_provide,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=BIGINT},
            </if>
            <if test="contract_name != null" >
                #{contract_name,jdbcType=VARCHAR},
            </if>
            <if test="sign_date != null" >
                #{sign_date,jdbcType=VARCHAR},
            </if>
            <if test="contract_amount != null" >
                #{contract_amount,jdbcType=VARCHAR},
            </if>
            <if test="received_amount!= null" >
                #{received_amount,jdbcType=VARCHAR},
            </if>
            <if test="receivable_amount != null" >
                #{receivable_amount,jdbcType=VARCHAR},
            </if>
            <if test="payment_method != null" >
                #{payment_method,jdbcType=VARCHAR},
            </if>
            <if test="invoice_provide != null" >
                #{invoice_provide,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
</mapper>